{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    cart: []\n  },\n  reducers: {\n    changeQuantity(state, action) {\n      state.cart[action.payload].quantity += action.payload.quantity;\n      console.log('reducer');\n    },\n\n    addToCart(state, action) {\n      state.cart.push(action.payload);\n      console.log('reducer');\n    },\n\n    inCart(state, action) {\n      for (let el of state.cart) {\n        console.log(`iterable element id: ${el.id}.${el.variant.id}`);\n        console.log(`chosen product id: ${action.payload.id}.${action.payload.variant.id}`);\n\n        if (`${el.id}.${el.variant.id}` === `${action.payload.id}.${action.payload.variant.id}`) {\n          console.ol(cart.indexOf(el));\n        } else return false;\n      }\n    },\n\n    removeFromCart(state, action) {//   const index = findProduct(state, action.payload.id);\n      //   check variant\n      //   state.splice(index);\n    },\n\n    changeSize() {}\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","cart","reducers","changeQuantity","state","action","payload","quantity","console","log","addToCart","push","inCart","el","id","variant","ol","indexOf","removeFromCart","changeSize","cartActions","actions"],"sources":["C:/Users/micha/Documents/REACT/ABSTRAKT-APP/app/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: { cart: [] },\r\n  reducers: {\r\n    changeQuantity(state, action) {\r\n      state.cart[action.payload].quantity += action.payload.quantity;\r\n      console.log('reducer')\r\n    },\r\n    addToCart(state, action) {\r\n      state.cart.push(action.payload);\r\n      console.log('reducer')\r\n    },\r\n    inCart (state, action) {\r\n      for (let el of state.cart) {\r\n        console.log(`iterable element id: ${el.id}.${el.variant.id}`);\r\n        console.log(`chosen product id: ${action.payload.id}.${action.payload.variant.id}`);\r\n        if (`${el.id}.${el.variant.id}` === `${action.payload.id}.${action.payload.variant.id}`) {\r\n          console.ol(cart.indexOf(el));\r\n        } else return false;\r\n      }\r\n    },\r\n    removeFromCart(state, action) {\r\n      //   const index = findProduct(state, action.payload.id);\r\n      //   check variant\r\n      //   state.splice(index);\r\n    },\r\n    changeSize() {},\r\n  },\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MADsB;EAE5BC,YAAY,EAAE;IAAEC,IAAI,EAAE;EAAR,CAFc;EAG5BC,QAAQ,EAAE;IACRC,cAAc,CAACC,KAAD,EAAQC,MAAR,EAAgB;MAC5BD,KAAK,CAACH,IAAN,CAAWI,MAAM,CAACC,OAAlB,EAA2BC,QAA3B,IAAuCF,MAAM,CAACC,OAAP,CAAeC,QAAtD;MACAC,OAAO,CAACC,GAAR,CAAY,SAAZ;IACD,CAJO;;IAKRC,SAAS,CAACN,KAAD,EAAQC,MAAR,EAAgB;MACvBD,KAAK,CAACH,IAAN,CAAWU,IAAX,CAAgBN,MAAM,CAACC,OAAvB;MACAE,OAAO,CAACC,GAAR,CAAY,SAAZ;IACD,CARO;;IASRG,MAAM,CAAER,KAAF,EAASC,MAAT,EAAiB;MACrB,KAAK,IAAIQ,EAAT,IAAeT,KAAK,CAACH,IAArB,EAA2B;QACzBO,OAAO,CAACC,GAAR,CAAa,wBAAuBI,EAAE,CAACC,EAAG,IAAGD,EAAE,CAACE,OAAH,CAAWD,EAAG,EAA3D;QACAN,OAAO,CAACC,GAAR,CAAa,sBAAqBJ,MAAM,CAACC,OAAP,CAAeQ,EAAG,IAAGT,MAAM,CAACC,OAAP,CAAeS,OAAf,CAAuBD,EAAG,EAAjF;;QACA,IAAK,GAAED,EAAE,CAACC,EAAG,IAAGD,EAAE,CAACE,OAAH,CAAWD,EAAG,EAA1B,KAAiC,GAAET,MAAM,CAACC,OAAP,CAAeQ,EAAG,IAAGT,MAAM,CAACC,OAAP,CAAeS,OAAf,CAAuBD,EAAG,EAAtF,EAAyF;UACvFN,OAAO,CAACQ,EAAR,CAAWf,IAAI,CAACgB,OAAL,CAAaJ,EAAb,CAAX;QACD,CAFD,MAEO,OAAO,KAAP;MACR;IACF,CAjBO;;IAkBRK,cAAc,CAACd,KAAD,EAAQC,MAAR,EAAgB,CAC5B;MACA;MACA;IACD,CAtBO;;IAuBRc,UAAU,GAAG,CAAE;;EAvBP;AAHkB,CAAD,CAA7B;AA8BA,OAAO,MAAMC,WAAW,GAAGtB,SAAS,CAACuB,OAA9B;AAEP,eAAevB,SAAf"},"metadata":{},"sourceType":"module"}