{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\Documents\\\\REACT\\\\ABSTRAKT-APP\\\\app\\\\src\\\\components\\\\elements\\\\OptionSort.js\",\n    _s = $RefreshSig$();\n\nimport ButtonOption from \"../ui/buttons/ButtonOption\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport nextValue from \"../../helpers/nextValue\";\nimport sortProducts from \"../../helpers/sortProducts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OptionSort = props => {\n  _s();\n\n  const optionValues = [\"price\", \"popularity\", \"author\", \"name\", \"date released\"];\n  const optionOrder = [\"up\", \"down\"];\n  const [optionSettings, setOptionSettings] = useState({\n    value: optionValues[1],\n    order: optionOrder[0]\n  });\n  useEffect(sortProducts(optionSettings.value, optionSettings.order, props.data), [optionSettings.value, optionSettings.order]);\n\n  const valueHandler = () => {\n    const nextValue = nextValue(optionValues, optionSettings.value);\n    console.log(`new value of option ${nextValue}`);\n    setOptionSettings({ ...optionSettings,\n      value: nextValue\n    });\n  };\n\n  const orderHandler = () => {\n    const nextOrder = nextValue(optionOrder, optionSettings.order);\n    console.log(`new value of option ${nextOrder}`);\n    setOptionSettings({ ...optionSettings,\n      order: nextOrder\n    });\n  };\n\n  const option = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ButtonOption, {\n      onClickHandler: valueHandler,\n      children: optionSettings.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonOption, {\n      onClickHandler: orderHandler,\n      children: optionSettings.order\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  return option;\n};\n\n_s(OptionSort, \"gWPjKDmgDlvY1xgVWOi8h0oWB4M=\");\n\n_c = OptionSort;\nexport default OptionSort;\n\nvar _c;\n\n$RefreshReg$(_c, \"OptionSort\");","map":{"version":3,"names":["ButtonOption","useState","useEffect","nextValue","sortProducts","OptionSort","props","optionValues","optionOrder","optionSettings","setOptionSettings","value","order","data","valueHandler","console","log","orderHandler","nextOrder","option"],"sources":["C:/Users/micha/Documents/REACT/ABSTRAKT-APP/app/src/components/elements/OptionSort.js"],"sourcesContent":["import ButtonOption from \"../ui/buttons/ButtonOption\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport nextValue from \"../../helpers/nextValue\";\r\nimport sortProducts from \"../../helpers/sortProducts\";\r\n\r\nconst OptionSort = (props) => {\r\n  const optionValues = [\r\n    \"price\",\r\n    \"popularity\",\r\n    \"author\",\r\n    \"name\",\r\n    \"date released\",\r\n  ];\r\n  const optionOrder = [\"up\", \"down\"];\r\n\r\n  const [optionSettings, setOptionSettings] = useState({\r\n    value: optionValues[1],\r\n    order: optionOrder[0],\r\n  });\r\n\r\n  useEffect(sortProducts(optionSettings.value, optionSettings.order, props.data),[optionSettings.value, optionSettings.order])\r\n\r\n  const valueHandler = () => {\r\n    const nextValue = nextValue(optionValues, optionSettings.value);\r\n    console.log(`new value of option ${nextValue}`)\r\n    setOptionSettings({...optionSettings, value: nextValue})\r\n  };\r\n\r\n  const orderHandler = () => {\r\n    const nextOrder = nextValue(optionOrder, optionSettings.order);\r\n    console.log(`new value of option ${nextOrder}`)\r\n    setOptionSettings({...optionSettings, order: nextOrder})\r\n  };\r\n\r\n  const option = (\r\n    <>\r\n      <ButtonOption onClickHandler={valueHandler}>\r\n        {optionSettings.value}\r\n      </ButtonOption>\r\n      <ButtonOption onClickHandler={orderHandler}>{optionSettings.order}</ButtonOption>\r\n    </>\r\n  );\r\n\r\n  return option;\r\n};\r\n\r\nexport default OptionSort;\r\n"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,4BAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;EAAA;;EAC5B,MAAMC,YAAY,GAAG,CACnB,OADmB,EAEnB,YAFmB,EAGnB,QAHmB,EAInB,MAJmB,EAKnB,eALmB,CAArB;EAOA,MAAMC,WAAW,GAAG,CAAC,IAAD,EAAO,MAAP,CAApB;EAEA,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC;IACnDU,KAAK,EAAEJ,YAAY,CAAC,CAAD,CADgC;IAEnDK,KAAK,EAAEJ,WAAW,CAAC,CAAD;EAFiC,CAAD,CAApD;EAKAN,SAAS,CAACE,YAAY,CAACK,cAAc,CAACE,KAAhB,EAAuBF,cAAc,CAACG,KAAtC,EAA6CN,KAAK,CAACO,IAAnD,CAAb,EAAsE,CAACJ,cAAc,CAACE,KAAhB,EAAuBF,cAAc,CAACG,KAAtC,CAAtE,CAAT;;EAEA,MAAME,YAAY,GAAG,MAAM;IACzB,MAAMX,SAAS,GAAGA,SAAS,CAACI,YAAD,EAAeE,cAAc,CAACE,KAA9B,CAA3B;IACAI,OAAO,CAACC,GAAR,CAAa,uBAAsBb,SAAU,EAA7C;IACAO,iBAAiB,CAAC,EAAC,GAAGD,cAAJ;MAAoBE,KAAK,EAAER;IAA3B,CAAD,CAAjB;EACD,CAJD;;EAMA,MAAMc,YAAY,GAAG,MAAM;IACzB,MAAMC,SAAS,GAAGf,SAAS,CAACK,WAAD,EAAcC,cAAc,CAACG,KAA7B,CAA3B;IACAG,OAAO,CAACC,GAAR,CAAa,uBAAsBE,SAAU,EAA7C;IACAR,iBAAiB,CAAC,EAAC,GAAGD,cAAJ;MAAoBG,KAAK,EAAEM;IAA3B,CAAD,CAAjB;EACD,CAJD;;EAMA,MAAMC,MAAM,gBACV;IAAA,wBACE,QAAC,YAAD;MAAc,cAAc,EAAEL,YAA9B;MAAA,UACGL,cAAc,CAACE;IADlB;MAAA;MAAA;MAAA;IAAA,QADF,eAIE,QAAC,YAAD;MAAc,cAAc,EAAEM,YAA9B;MAAA,UAA6CR,cAAc,CAACG;IAA5D;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA,gBADF;;EASA,OAAOO,MAAP;AACD,CAvCD;;GAAMd,U;;KAAAA,U;AAyCN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}