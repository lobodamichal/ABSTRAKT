{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\Documents\\\\REACT\\\\ABSTRAKT-APP\\\\app\\\\src\\\\components\\\\elements\\\\OptionSort.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport ButtonOption from \"../ui/buttons/ButtonOption\";\nimport nextValue from \"../../helpers/nextValue\";\nimport sortProducts from \"../../helpers/sortProducts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OptionSort = props => {\n  _s();\n\n  console.log(data);\n  const optionValues = [\"price\", \"popularity\", \"author\", \"name\", \"date released\"];\n  const optionOrders = [\"up\", \"down\"];\n  const [optionSettings, setOptionSettings] = useState({\n    value: optionValues[1],\n    order: optionOrders[0]\n  });\n\n  const valueHandler = () => {\n    const newValue = nextValue(optionValues, optionSettings.value);\n    console.log(`new value of option ${newValue}`);\n    setOptionSettings({ ...optionSettings,\n      value: newValue\n    });\n    sortProducts(optionSettings.value, optionSettings.order, props.data);\n  };\n\n  const orderHandler = () => {\n    const newOrder = nextValue(optionOrders, optionSettings.order);\n    console.log(`new value of option ${newOrder}`);\n    setOptionSettings({ ...optionSettings,\n      order: newOrder\n    });\n    sortProducts(optionSettings.value, optionSettings.order, props.data);\n  };\n\n  const option = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ButtonOption, {\n      onClickHandler: valueHandler,\n      children: optionSettings.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonOption, {\n      onClickHandler: orderHandler,\n      children: optionSettings.order\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  return option;\n};\n\n_s(OptionSort, \"+Ar1WjfJJbPPirRQMgu7SbahY94=\");\n\n_c = OptionSort;\nexport default OptionSort;\n\nvar _c;\n\n$RefreshReg$(_c, \"OptionSort\");","map":{"version":3,"names":["useState","ButtonOption","nextValue","sortProducts","OptionSort","props","console","log","data","optionValues","optionOrders","optionSettings","setOptionSettings","value","order","valueHandler","newValue","orderHandler","newOrder","option"],"sources":["C:/Users/micha/Documents/REACT/ABSTRAKT-APP/app/src/components/elements/OptionSort.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport ButtonOption from \"../ui/buttons/ButtonOption\";\r\nimport nextValue from \"../../helpers/nextValue\";\r\nimport sortProducts from \"../../helpers/sortProducts\";\r\n\r\nconst OptionSort = (props) => {\r\n  console.log(data)\r\n  const optionValues = [\r\n    \"price\",\r\n    \"popularity\",\r\n    \"author\",\r\n    \"name\",\r\n    \"date released\",\r\n  ];\r\n  const optionOrders = [\"up\", \"down\"];\r\n\r\n  const [optionSettings, setOptionSettings] = useState({\r\n    value: optionValues[1],\r\n    order: optionOrders[0],\r\n  });\r\n\r\n  const valueHandler = () => {\r\n    const newValue = nextValue(optionValues, optionSettings.value);\r\n    console.log(`new value of option ${newValue}`);\r\n    setOptionSettings({ ...optionSettings, value: newValue });\r\n    sortProducts(optionSettings.value, optionSettings.order, props.data)\r\n  };\r\n\r\n  const orderHandler = () => {\r\n    const newOrder = nextValue(optionOrders, optionSettings.order);\r\n    console.log(`new value of option ${newOrder}`);\r\n    setOptionSettings({ ...optionSettings, order: newOrder });\r\n    sortProducts(optionSettings.value, optionSettings.order, props.data)\r\n  };\r\n\r\n  const option = (\r\n    <>\r\n      <ButtonOption onClickHandler={valueHandler}>\r\n        {optionSettings.value}\r\n      </ButtonOption>\r\n      <ButtonOption onClickHandler={orderHandler}>\r\n        {optionSettings.order}\r\n      </ButtonOption>\r\n    </>\r\n  );\r\n\r\n  return option;\r\n};\r\n\r\nexport default OptionSort;\r\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;EAAA;;EAC5BC,OAAO,CAACC,GAAR,CAAYC,IAAZ;EACA,MAAMC,YAAY,GAAG,CACnB,OADmB,EAEnB,YAFmB,EAGnB,QAHmB,EAInB,MAJmB,EAKnB,eALmB,CAArB;EAOA,MAAMC,YAAY,GAAG,CAAC,IAAD,EAAO,MAAP,CAArB;EAEA,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAC;IACnDa,KAAK,EAAEJ,YAAY,CAAC,CAAD,CADgC;IAEnDK,KAAK,EAAEJ,YAAY,CAAC,CAAD;EAFgC,CAAD,CAApD;;EAKA,MAAMK,YAAY,GAAG,MAAM;IACzB,MAAMC,QAAQ,GAAGd,SAAS,CAACO,YAAD,EAAeE,cAAc,CAACE,KAA9B,CAA1B;IACAP,OAAO,CAACC,GAAR,CAAa,uBAAsBS,QAAS,EAA5C;IACAJ,iBAAiB,CAAC,EAAE,GAAGD,cAAL;MAAqBE,KAAK,EAAEG;IAA5B,CAAD,CAAjB;IACAb,YAAY,CAACQ,cAAc,CAACE,KAAhB,EAAuBF,cAAc,CAACG,KAAtC,EAA6CT,KAAK,CAACG,IAAnD,CAAZ;EACD,CALD;;EAOA,MAAMS,YAAY,GAAG,MAAM;IACzB,MAAMC,QAAQ,GAAGhB,SAAS,CAACQ,YAAD,EAAeC,cAAc,CAACG,KAA9B,CAA1B;IACAR,OAAO,CAACC,GAAR,CAAa,uBAAsBW,QAAS,EAA5C;IACAN,iBAAiB,CAAC,EAAE,GAAGD,cAAL;MAAqBG,KAAK,EAAEI;IAA5B,CAAD,CAAjB;IACAf,YAAY,CAACQ,cAAc,CAACE,KAAhB,EAAuBF,cAAc,CAACG,KAAtC,EAA6CT,KAAK,CAACG,IAAnD,CAAZ;EACD,CALD;;EAOA,MAAMW,MAAM,gBACV;IAAA,wBACE,QAAC,YAAD;MAAc,cAAc,EAAEJ,YAA9B;MAAA,UACGJ,cAAc,CAACE;IADlB;MAAA;MAAA;MAAA;IAAA,QADF,eAIE,QAAC,YAAD;MAAc,cAAc,EAAEI,YAA9B;MAAA,UACGN,cAAc,CAACG;IADlB;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA,gBADF;;EAWA,OAAOK,MAAP;AACD,CA1CD;;GAAMf,U;;KAAAA,U;AA4CN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}